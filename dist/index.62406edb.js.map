{"mappings":"AAAA,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAE/C,MAAM,UAAU,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,WAAW,WAAY;YACrB,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,UAAU;AAEhB,wBAAwB;AACxB,MAAM,aAAa,eAAgB,QAAQ,EAAE;IAC3C,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,CAAC,iDAAiD,EAAE,SAAS,KAAK,EAAE,QAAQ,CAAC;QAE/E,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;QAErE;;;;KAIC,GACD,IAAI,EAAE,OAAM,EAAE,GAAG,KAAK,IAAI;QAE1B,SAAS;YACP,IAAI,OAAO,EAAE;YACb,OAAO,OAAO,KAAK;YACnB,WAAW,OAAO,SAAS;YAC3B,WAAW,OAAO,UAAU;YAC5B,OAAO,OAAO,SAAS;YACvB,UAAU,OAAO,QAAQ;YACzB,aAAa,OAAO,YAAY;YAChC,aAAa,OAAO,WAAW;QACjC;QAEA,QAAQ,GAAG,CAAC;QACZ,0BAA0B;QAC1B,MAAM,SAAS,CAAC;;kBAEF,EAAE,OAAO,KAAK,CAAC,OAAO,EAAE,OAAO,KAAK,CAAC;;gBAEvC,EAAE,OAAO,KAAK,CAAC;;;;;;;;;qEASsC,EACzD,OAAO,WAAW,CACnB;;;;;;;oEAOyD,EACxD,OAAO,QAAQ,CAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgCD,EAAE,OAAO,WAAW,CACjB,GAAG,CAAC,CAAA,aAAc;YACjB,OAAO,CAAC;;;;;4CAKsB,EAAE,WAAW,QAAQ,CAAC;;2CAEvB,EAAE,WAAW,IAAI,CAAC;gBAC7C,EAAE,WAAW,WAAW,CAAC;;iBAExB,CAAC;QACN,GACC,IAAI,CAAC,IAAI;;;;;;;;0CAQoB,EAC9B,OAAO,SAAS,CACjB;;;;;gBAKK,EAAE,OAAO,SAAS,CAAC;;;;;;;;;IAS/B,CAAC;QAED,QAAQ,GAAG,CAAC,OAAO,WAAW;QAC9B,gBAAgB,SAAS,GAAG,IAAI,6EAA6E;QAC7G,gBAAgB,kBAAkB,CAAC,cAAc;IACnD,EAAE,OAAO,KAAK;QACZ,MAAM;IACR;AACF;AAEA,WAAW","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst API_KEY = '6c48248b-2c26-435d-b324-d324ae0acff0';\n\n// 1. LOADING THE RECIPE\nconst showRecipe = async function (recipeId) {\n  try {\n    const response = await fetch(\n      `https://forkify-api.herokuapp.com/api/v2/recipes/${recipeId}?key=${API_KEY}`\n    );\n    const data = await response.json();\n\n    if (!response.ok) throw new Error(`${data.message} (${res.status})`);\n\n    /**\n     * Not destructured\n     *\n     * let recipe = data.data.recipe;\n     */\n    let { recipe } = data.data;\n\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      servings: recipe.servings,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    };\n\n    console.log(recipe);\n    // 2. RENDERING THE RECIPE\n    const markup = `\n      <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\n            recipe.cookingTime\n          }</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">${\n            recipe.servings\n          }</span>\n          <span class=\"recipe__info-text\">servings</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients\n            .map(ingredient => {\n              return `\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ingredient.quantity}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ingredient.unit}</span>\n                ${ingredient.description}\n              </div>\n            </li>`;\n            })\n            .join('')}\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${\n            recipe.publisher\n          }</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\"\n        >\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n\n    console.log(recipe.ingredients);\n    recipeContainer.innerHTML = ''; // Removes `Start by searching for a recipe or an ingredient. Have fun!` text\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (err) {\n    alert(err);\n  }\n};\n\nshowRecipe('5ed6604591c37cdc054bc886');\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}